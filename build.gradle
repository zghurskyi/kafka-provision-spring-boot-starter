plugins {
    id 'com.gradle.build-scan' version '2.1'
    id 'java'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'org.sonarqube' version '2.7'
    id 'jacoco'
    id 'signing'
    id 'maven'
}

group = 'io.github.zghurskyi.kafka'
archivesBaseName = "kafka-provision-spring-boot-starter"
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

ext {
    hibernateValidatorVersion = "6.0.10.Final"
    springBootVersion = "2.1.4.RELEASE"
    springKafkaVersion = "2.1.10.RELEASE"
    commonsLang3Version = "3.7"
    jacksonVersion = "2.9.7"
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"

    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.kafka:spring-kafka:${springKafkaVersion}"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-test:${springBootVersion}"
    testImplementation "org.springframework.kafka:spring-kafka-test:${springKafkaVersion}"
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.1.4.RELEASE'
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    reports {
        html.enabled = true
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

jacoco {
    toolVersion = "0.8.3"
}

sonarqube {
    properties {
        property "sonar.projectKey", "zghurskyi_kafka-provisioner-spring-boot-starter"
        property "sonar.projectName", "Kafka Provision Spring Boot Starter"
    }
}

signing {
    sign configurations.archives
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'Kafka Provision Spring Boot Starter'
                packaging 'jar'
                description 'Spring Boot Starter to enable decentralized Kafka provisioning'
                url 'https://github.com/zghurskyi/kafka-provision-spring-boot-starter'

                scm {
                    connection 'scm:git:git@github.com:zghurskyi/kafka-provision-spring-boot-starter.git'
                    developerConnection 'scm:git:ssh://github.com:zghurskyi/kafka-provision-spring-boot-starter.git'
                    url 'http://github.com/zghurskyi/kafka-provision-spring-boot-starter/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'zghurskyi'
                        name 'Oleksii Zghurskyi'
                        email 'oleksii.zghurskyi@gmail.com'
                        organization 'zghurskyi'
                        organizationUrl 'https://www.oxymorus.com/'
                    }
                }
            }
        }
    }
}
